{"version":3,"sources":["../appES6/xmlHelperES5.js"],"names":[],"mappings":"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","file":"xmlHelper.js","sourcesContent":["define(require => {\r\n  const $req     = require(\"request\")\r\n  const $render  = require(\"render\")\r\n  const $db      = require(\"database\")\r\n  const settings = $db.get(\"settings\")\r\n\r\n  const stringifyXML = xml => {\r\n    const strigifier = new XMLSerializer()\r\n    return strigifier.serializeToString(xml)\r\n  }\r\n\r\n\r\n  const xmlToTable = xmlDocument => {\r\n    const $alg = require(\"algorithm\")\r\n    console.log(xmlDocument)\r\n    const availability = getAvailabilityObjectsFromSettingsArray(xmlDocument, settings.roomTypes)\r\n    $db.storeAvailability(availability)\r\n    console.log($alg)\r\n    const rates        = $alg.getRates(availability)\r\n    return {\r\n      rates: rates,\r\n      availability: availability\r\n    }\r\n  }\r\n\r\n\r\n  const getAndStoreXML = (url) => {\r\n    return new Promise((resolve, reject) => {\r\n      $req.fromURL(url, \"DOM\").then(xmlDocument => {\r\n        const xmlString = stringifyXML(xmlDocument)\r\n        $db.set(\"rawXML\", xmlString)\r\n        console.log(xmlDocument)\r\n        resolve(xmlDocument)\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const getInventoryFromID = (xml, inventoryID) => {\r\n\r\n    const inventory = xml.getElementsByTagName(\"inventoryItem\")\r\n      let returnItem = false\r\n      Array.from(inventory).forEach(item => {\r\n        const ID = item.getAttribute(\"inventoryCode\")\r\n        if(ID == inventoryID) returnItem = item\r\n      })\r\n        \r\n      if(!returnItem) alert(\"Error getting Inventory by ID: \" + inventoryID)\r\n      else \r\n\r\n        return returnItem\r\n  }\r\n\r\n\r\n  const getAvailabilityObjectsFromSettingsArray = (xml, objectWithArraysOfRoomTypes) => {\r\n\r\n    console.log(xml)\r\n    let returnObject = {}\r\n    let prototypeWithDates = {}\r\n    for(let roomClass in objectWithArraysOfRoomTypes) {\r\n      const array = objectWithArraysOfRoomTypes[roomClass]\r\n      if(array.length == 0) {\r\n        alert(\"roomClass was empty\")\r\n        break;\r\n      }\r\n      const inventory = Array.from(getInventoryFromID(xml, array[0]).getElementsByTagName(\"day\"))\r\n      inventory.forEach(day => {\r\n        const date = day.getAttribute(\"date\")\r\n        prototypeWithDates[date] = [0, 0]\r\n      })\r\n    }\r\n\r\n    for(let roomClass in objectWithArraysOfRoomTypes) {\r\n      console.log(roomClass)\r\n      returnObject[roomClass] = {}\r\n      for(let key in prototypeWithDates)\r\n        returnObject[roomClass][key] = [0, 0]\r\n\r\n      objectWithArraysOfRoomTypes[roomClass].forEach(roomType => {\r\n        const inventory = Array.from(getInventoryFromID(xml, roomType).getElementsByTagName(\"day\"))\r\n        inventory.forEach(day => {\r\n          const date         = day.getAttribute(\"date\")\r\n          const availability = day.getAttribute(\"availability\")\r\n          const currentRate  = day.getAttribute(\"rate\")\r\n          returnObject[roomClass][date][1] = currentRate\r\n          returnObject[roomClass][date][0] += parseInt(availability)\r\n        })\r\n      })\r\n    }\r\n    \r\n    return returnObject\r\n  }\r\n\r\n\r\n\r\n  return {\r\n    getInventory: getInventoryFromID,\r\n    getAvailabilityObjects: getAvailabilityObjectsFromSettingsArray,\r\n    getAndStoreXML: getAndStoreXML,\r\n    stringifyXML: stringifyXML,\r\n    xmlToTable: xmlToTable\r\n  }\r\n})"]}