{"version":3,"sources":["es6scripts.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["  \n\n\n\n(() => {\n\n\n\n  //string handler\n  let availabilityRequestURI = \"https://api.roomercloud.net/services/bookingapi/availability1?hotel=HLEI&channelCode=HOT&channelManagerCode=OWN&\"\n  const today = new Date()\n  const dayInMs = 86400000\n  let todayPlus400days = new Date()\n  todayPlus400days.setDate(todayPlus400days.getDate() + 20)\n\n  availabilityRequestURI += \"arrivalDate=\"   + today.getUTCFullYear() + \"-\" + (today.getUTCMonth() + 1) + \"-\" + today.getUTCDate()\n  availabilityRequestURI += \"&\"\n  availabilityRequestURI += \"departureDate=\" + todayPlus400days.getUTCFullYear() + \"-\" + (todayPlus400days.getUTCMonth() + 1) + \"-\" + todayPlus400days.getUTCDate()\n\n  let availabilityXML;\n\n  const getInventory = (inventoryID) => {\n      const inventory = availabilityXML.getElementsByTagName(\"inventoryItem\")\n      let returnItem = false\n      Array.from(inventory).forEach(item => {\n        const ID = item.getAttribute(\"inventoryCode\")\n        if(ID == inventoryID) returnItem = item\n      })\n\n      if(!returnItem) alert(\"Error getting Inventory by ID: \" + inventoryID)\n      else return returnItem\n  }\n\n  let settings;\n  let rateParameters;\n  let singles;\n  let doubles;\n  let total;\n\n  const getSinglesObject = () => {\n    const singlesInventory = getInventory(\"SGL-S\").getElementsByTagName(\"day\")\n    let singlesObject = {}\n    Array.from(singlesInventory).forEach(day => {\n      const date         = day.getAttribute(\"date\")\n      const availability = day.getAttribute(\"availability\")\n      const currentRate  = day.getAttribute(\"rate\")\n      singlesObject[date] = [availability, currentRate]\n    })\n    console.log(singlesObject)\n    return singlesObject\n  }\n\n  const getDoublesObject = () => {\n    console.log(settings)\n    const doublesTypes = settings.roomTypes.dbl\n    let   doublesInventories = []\n    doublesTypes.forEach(item => {\n      doublesInventories.push(getInventory(item))\n    })\n\n    let doublesObject = {}\n\n    Array.from(doublesInventories[0].getElementsByTagName(\"day\")).forEach((day, i) => {\n      const date = day.getAttribute(\"date\")\n      doublesObject[date] = [0, 0]\n    })\n\n    doublesInventories.forEach((roomType, i) => {\n      const days = roomType.getElementsByTagName(\"day\")\n      Array.from(days).forEach(day => {\n        const date         = day.getAttribute(\"date\")\n        const availability = day.getAttribute(\"availability\")\n        const currentRate  = day.getAttribute(\"rate\")\n        doublesObject[date][1] = currentRate\n        doublesObject[date][0] += parseInt(availability)\n      })\n    })\n    console.log(doublesObject)\n    return doublesObject\n  }\n\n\n  const weekendValue = date => {\n      const weekendBonus = rateParameters.weekendWeight\n      const day = date.getDay()\n      if(day == 4) return weekendBonus * 0.5\n      if(day == 6 || day == 5) return weekendBonus\n      return 0\n  }\n\n  const seasonalValue = date => {\n    const seasonalBonus = rateParameters.seasonalWeight\n    const month = date.getMonth()\n    const tourists = settings.numberOfTouristsJanIs0\n    let   max = 0\n    let   min = Infinity\n\n    for(let key in tourists) {\n      if(parseInt(tourists[key]) > max) max = tourists[key]\n      if(parseInt(tourists[key]) < min) min = tourists[key]\n    }\n\n    const ratio = (tourists[month] - min) / (max - min) \n\n    return ratio * seasonalBonus\n  }\n\n  const superDayValue = date => {\n    \n    let dateString = \"\"\n    dateString += date.getDate() + \".\"\n    dateString += (date.getMonth() + 1) + \".\"\n    dateString += date.getUTCFullYear()\n\n    const superdays = settings.superDays\n    const weight = rateParameters.superDayWeight\n    for(let key in superdays) {\n      console.log(key + \" and \" + dateString)\n      if(key == dateString) return superdays[key] * weight\n    }\n\n    return 0\n  }\n\n  const makeTableFromArray = array => {\n    if(array[0][0] == undefined) alert(\"Some function gave me not a table\")\n    const table = document.createElement(\"table\")\n    array.forEach((key) => {\n      const tr = document.createElement(\"tr\")\n      key.forEach((item) => {\n        const td  = document.createElement(\"td\")\n        const txt = document.createTextNode(item)\n        td.appendChild(txt)\n        tr.appendChild(td)\n      })\n      table.appendChild(tr)\n    })\n    return table\n  }\n\n  const render = () => {\n    singles = getSinglesObject()\n    doubles = getDoublesObject()\n    total   = Object.keys(singles).map((key, index) => {\n      const s = parseInt(singles[key][0])\n      const d = parseInt(doubles[key][0])\n      return [key, s + d]\n    })\n\n    console.log(\"Total: \" + total)\n\n    const priceFloor      = rateParameters.priceFloor\n    const absPriceFloor   = rateParameters.absoluteFloor\n    const seasonalWeight  = rateParameters.seasonalWeight\n    const futureWeight    = rateParameters.futureWeight\n    const superDayWeight  = rateParameters.superDayWeight\n    const occupancyWeight = rateParameters.occupancyWeight\n    const sellOffWeight   = rateParameters.sellOff\n\n    const ratesCalculated  = total.map((dateAndAvailability) => {\n      const dateString     = dateAndAvailability[0]\n      const availability   = parseInt(dateAndAvailability[1])\n      const dateObject     = new Date(dateString)\n      const now            = Date.now()\n      const daysUntilDate  = 1 + Math.floor((dateObject - now)/1000/60/60/24);\n      const month          = dateObject.getMonth()\n      const weekendBonus   = weekendValue(dateObject)\n      console.log(dateObject.getUTCFullYear())\n\n      const seasonalBonus  = seasonalValue(dateObject)\n      const occupancy      = availability/47\n      const occupancyBonus = (1-occupancy) * occupancyWeight //\n      const expectedRooms  = Math.min(Math.pow(daysUntilDate/180, 0.7), 1) //\n      const futureBonus    = (1-expectedRooms)*futureWeight //\n      const lastRoomsBonus = Math.pow(1-occupancy, 8)*occupancyWeight*1.5 //\n      const sellOffRatio   = Math.min(Math.pow((187 - daysUntilDate)/180, 6.5), 1) //\n      const sellOffBonus   = sellOffRatio * sellOffWeight //\n      const superDayBonus  = superDayValue(dateObject)\n\n      const rateShift      = occupancyBonus - futureBonus //\n      const baseRate       = priceFloor + rateShift + seasonalBonus /* + SUPERDAY BONUS */\n      const baseRatePlus   = baseRate - sellOffBonus + weekendBonus + lastRoomsBonus + superDayBonus\n      const absFloorPlus   = absPriceFloor + weekendBonus\n\n      const finalRate      = Math.max(absFloorPlus, baseRatePlus)\n\n      return [dateAndAvailability, finalRate]\n    })\n\n\n    const rateTable = makeTableFromArray(ratesCalculated)\n    document.querySelector(\".rates\").appendChild(rateTable) \n    showRatesAndAvailabilities()\n  }\n\n  const showRatesAndAvailabilities = () => {\n    let singlesTable = Object.keys(singles).map((key) => {\n      return [key, singles[key][0], singles[key][1]]\n    })\n\n    let doublesTable = Object.keys(doubles).map((key) => {\n      return [key, doubles[key][0], doubles[key][1]]\n    })\n\n    //console.log(doublesTable)\n\n    const tableElement = document.createElement(\"table\")\n    const tablerow     = document.createElement(\"tr\")\n    const singlesText  = document.createTextNode(\"singles\")\n    tablerow.appendChild(singlesText)\n    singlesTable.forEach((item, index) => {\n      const tr                = document.createElement(\"tr\")\n      const tdDate            = document.createElement(\"td\")\n      const tdAvailabilitySgl = document.createElement(\"td\")\n      const tdRate            = document.createElement(\"td\")\n      const tdAvailabilityDbl = document.createElement(\"td\")\n      const availabilityDbl   = document.createTextNode(doublesTable[index][1])\n      const availabilitySgl   = document.createTextNode(item[1])\n      const date              = document.createTextNode(item[0])\n\n      tdDate           .appendChild(date)\n      tdAvailabilityDbl.appendChild(availabilityDbl)\n      tdAvailabilitySgl.appendChild(availabilitySgl)\n      tr               .appendChild(tdDate)\n      tr               .appendChild(tdAvailabilitySgl)\n      tr               .appendChild(tdAvailabilityDbl)\n      tableElement     .appendChild(tr)\n    })\n\n    document.querySelector(\".channelAvailability\").appendChild(tableElement)\n  }\n\n  const loadRateParameters = () => {\n    const xml = new XMLHttpRequest()\n    xml.open('GET', 'rateSettings.json', true)\n    xml.send(null)\n    xml.onreadystatechange = () => {\n      if (xml.readyState === XMLHttpRequest.DONE && xml.status === 200) {\n        const JSONtext = xml.responseText\n        settings = JSON.parse(JSONtext)\n        rateParameters = settings.rateParameter\n        console.log(rateParameters)\n        render() //entry point: STAGE 2\n      }\n    }\n  }\n\n  ;(() => {\n    const xml = new XMLHttpRequest()\n    xml.open('GET', availabilityRequestURI, true)\n    xml.send(null)\n    xml.onreadystatechange = () => {\n      if (xml.readyState === XMLHttpRequest.DONE && xml.status === 200) {\n        const parser = new DOMParser()\n        availabilityXML = parser.parseFromString(xml.responseText, \"text/xml\")\n        console.log(availabilityXML)\n        loadRateParameters() //entry point: STAGE 1\n      }\n    }\n  })();\n})()"]}